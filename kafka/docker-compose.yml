version: "3.9"

# feel free to remove kafdrop
# TODO: setup with schema-registry
services:
  kafdrop:
    depends_on:
      kafka:
        condition: service_started
    environment:
      JVM_OPTS: -Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication
        -noverify
      KAFKA_BROKERCONNECT: "kafka:29092"
    image: obsidiandynamics/kafdrop
    ports:
    - mode: ingress
      target: 9000
      published: 9000
      protocol: tcp
    restart: "no"

  kafka:
    depends_on:
      zookeeper:
        condition: service_started
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 5m0s
    environment:
      ALLOW_PLAINTEXT_LISTENER: "true"
      KAFKA_ADVERTISED_LISTENERS: "EXTERNAL://localhost:9092,INTERNAL://:29092"
      KAFKA_LISTENERS: "EXTERNAL://localhost:9092,INTERNAL://:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
    image: confluentinc/cp-kafka
    ports:
    - mode: ingress
      target: 9092
      published: 9092
      protocol: tcp
    volumes:
    - type: volume
      source: kafka_data
      target: /kafka
      volume: {}

  zookeeper:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 5m0s
    environment:
      ALLOW_ANONYMOUS_LOGIN: "true"
      ZOOKEEPER_CLIENT_PORT: 2181
    image: confluentinc/cp-zookeeper
    ports:
    - mode: ingress
      target: 2181
      published: 2181
      protocol: tcp
    volumes:
    - type: volume
      source: zookeeper_data
      target: /zookeeper
      volume: {}

volumes:
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local
